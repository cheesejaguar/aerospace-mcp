apiVersion: v1
kind: Service
metadata:
  name: aerospace-mcp-service
  namespace: default
  labels:
    app: aerospace-mcp
    component: api
  annotations:
    # Optional: service annotations for monitoring
    prometheus.io/scrape: "false"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP  # Change to LoadBalancer or NodePort for external access
  selector:
    app: aerospace-mcp
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  
  # Session affinity (optional)
  sessionAffinity: None
  
  # IP families for dual-stack (optional)
  ipFamilyPolicy: SingleStack
  ipFamilies:
  - IPv4

---
# Alternative: NodePort service for home lab direct access
apiVersion: v1
kind: Service
metadata:
  name: aerospace-mcp-nodeport
  namespace: default
  labels:
    app: aerospace-mcp
    component: api
    service-type: nodeport
  annotations:
    service.kubernetes.io/topology-aware-hints: auto
spec:
  type: NodePort
  selector:
    app: aerospace-mcp
  ports:
  - name: http
    port: 8080
    targetPort: http
    nodePort: 30080  # Accessible on any node at port 30080
    protocol: TCP
  
  sessionAffinity: None
  externalTrafficPolicy: Local  # Better for home lab performance

---
# Optional: Headless service for direct pod access
apiVersion: v1
kind: Service
metadata:
  name: aerospace-mcp-headless
  namespace: default
  labels:
    app: aerospace-mcp
    component: api
    service-type: headless
spec:
  type: ClusterIP
  clusterIP: None  # Makes it headless
  selector:
    app: aerospace-mcp
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP