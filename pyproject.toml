[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aerospace-mcp"
version = "0.1.0"
description = "MCP server for aerospace and flight planning operations"
authors = [
    { name = "Aaron", email = "aaron@example.com" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.11"
keywords = ["aerospace", "flight-planning", "mcp", "aviation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "openap>=1.3.0",
    "airportsdata>=20231201",
    "geographiclib>=2.0",
    "pydantic>=2.0.0",
    "mcp>=1.0.0",
    "uvloop>=0.19.0; sys_platform != 'win32'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "httpx>=0.25.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "mypy>=1.6.0",
    "types-requests>=2.31.0",
]
atmosphere = [
    "ambiance>=1.3.0",
]
aircraft = [
    "aerosandbox>=0.9.0",
    # "machupx>=2.0.0",  # Not available on PyPI
]
rockets = [
    "rocketpy>=1.0.0",
    # "rocketcea>=1.1.0",  # May not be available on all platforms
]
space = [
    "poliastro>=0.17.0",
    "astropy>=5.0",
    "spiceypy>=5.0.0",
    "skyfield>=1.45",
]
trajopt = [
    # Heavy optimization packages - optional for advanced users
    # "openmdao>=3.0",
    # "dymos>=1.0", 
    # "casadi>=3.6.0",
]
gnc = [
    "filterpy>=1.4.5",
    "control>=0.9.0",
]
all = [
    "ambiance>=1.3.0",
    "aerosandbox>=0.9.0",
    # "machupx>=2.0.0",  # Not available on PyPI
    "rocketpy>=1.0.0",
    # "rocketcea>=1.1.0",  # May not be available on all platforms
    "poliastro>=0.17.0",
    "astropy>=5.0",
    "spiceypy>=5.0.0",
    "skyfield>=1.45",
    # Heavy packages commented out for CI performance
    # "openmdao>=3.0",
    # "dymos>=1.0", 
    # "casadi>=3.6.0",
    "filterpy>=1.4.5",
    "control>=0.9.0",
]

[project.scripts]
aerospace-mcp-http = "app.main:run"
aerospace-mcp = "aerospace_mcp.server:run"

[project.urls]
Homepage = "https://github.com/username/aerospace-mcp"
Repository = "https://github.com/username/aerospace-mcp"
Issues = "https://github.com/username/aerospace-mcp/issues"

# Hatchling configuration
[tool.hatch.build.targets.wheel]
packages = ["app", "aerospace_mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "/app",
    "/aerospace_mcp",
    "/tests",
    "/docs",
    "*.md",
    "*.toml",
    "LICENSE",
]

# UV configuration
[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "httpx>=0.25.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.0.0",
    "mypy>=1.6.0",
    "types-requests>=2.31.0",
    "pandas>=2.3.2",
]

[tool.uv.sources]
# Use PyPI for all dependencies by default

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Ruff configuration
[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B904",  # raise ... from err - temporarily disabled for pipeline optimization
    "B007",  # unused loop variables - temporarily disabled
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["app", "aerospace_mcp"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "openap.*",
    "airportsdata.*",
    "geographiclib.*",
]
ignore_missing_imports = true
